$(document).ready(function(){

  // Set current locale
  var i18nLocale = $("body").data("locale");

  // Format Currency
  const formatter = new Intl.NumberFormat("en-US", {
    style: "currency",
    currency: "USD",
    minimumFractionDigits: 2
  });
  // End Format Currency

  // Prevent submit on "Add to Cart" forms
  $("form.addCart").submit(function(e){
    e.preventDefault();
  });
  // End Prevent submit on "Add to Cart" forms

  function setProductsJson(){
    <% require "httparty" %>

    // Get Products Json
    <% #products_url = Rails.env.development? ? "http://localhost:3000/products.json": "#{$banp_domain}/products.json" %>
    <% products_url = "#{$banp_domain}/products.json" %>
    console.log("<%= products_url %>");

    <% products_json = JSON.pretty_generate(JSON.parse((HTTParty.get(products_url)).body)) rescue "{}" %>;
    var products = <%= products_json %>;
    console.log(products);
  }

  // Update cart, cart details, cart events and PayPal form
  function readCartInfo(){
    updateCartDropdown();
    updateCartPage();

    addEventMaskInput();
    $("#paypal-checkout").submit();
  }
  // End Update cart, cart details, cart events and PayPal form

  // Update cart dropdown information
  function updateCartDropdown(){
    // Read and load the banpCart localStorage
    var output = JSON.parse(localStorage.getItem("banpCart")) || null;
    var userID = parseInt(atob($("#currentCustomer").val().trim()));
    var counter = 0;

    // Cart details
    if(output){
      $(".cart-products").empty();

      $.each(output.cart, function(index, value){
        if(value !=  null){
          if(userID == value.cartDetails.userId){
            counter++;
          }
        }
      });
    }
    // End Cart details

    // Counter
    if(counter > 0){
      $(".cart-counter").css({"display": "block"});
      $(".cart-counter").text(counter);
      $(".cart-menu").removeClass("disabled");

      $(".cart-column").css({"display": "block"});
      $(".cart-empty").css({"display": "none"});
    }

    else{
      $(".cart-counter").css({"display": "none"});
      $(".cart-menu").addClass("disabled");

      $(".cart-column").css({"display": "none"});
      $(".cart-empty").css({"display": "block"});
    }
  }
  // Update cart dropdown information

  // Update cart page information
  function updateCartPage(){
    // Read and load the banpCart localStorage
    var output = JSON.parse(localStorage.getItem("banpCart")) || null;
    var userID = parseInt(atob($("#currentCustomer").val().trim()));
    var subtotal = 0;
    var counter = 0;

    // Cart details
    if(output){
      $(".cart-list").empty();

      // Filling cart details list
      $.each(output.cart, function(index, value){
        if(value !=  null){
          if(userID == value.cartDetails.userId){

            product = products.find(item => item.id === value.cartDetails.id);
            productName = i18nLocale == "es" ? product.name_spanish : product.name;

            subtotal += (product.price * value.cartDetails.quantity);
            counter ++;

            var productItem = "<div class='table-row'> <div class='image-column'><img class='img-responsive' src='" + product.image_url + "'></div> <div class='info cart-info'> <div class='name-column info-column'><span>" + productName + "</span></div> <div class='price-column info-column'><span>" + formatter.format(product.price) + "</span></div> <div class='quantity-column info-column'><form action='' class='cart-form' method=''><div class='quantity'> <button class='subtract-cart' name='minus' type='button'><span class='sr-only'>minus</span><i class='fas fa-minus'></i></button> <input id='quantity' class='q-input q-cart' name='quant-prod' type='number' value='" + value.cartDetails.quantity + "' min='1'> <button class='add-cart' name='plus' type='button'><span class='sr-only'>plus</span> <i class='fas fa-plus'></i></button></div> <input id='productId' name='productId' type='hidden' value='" + product.id + "'> </form></div> <div class='total-column info-column'><span>" + formatter.format((product.price * value.cartDetails.quantity)) + "</span></div> </div> <button class='remove-btn removeFromCart' name='Remove' type='button'><i class='far fa-trash-alt'></i></button> </div>";

            var productInfo = "<div class='item'><input id='products_" + counter + "_id' name='products[" + counter + "][id]' type='hidden' value='" + product.id + "'> <input id='products_" + counter + "_quantity' name='products[" + counter + "][quantity]' type='hidden' value='" + value.cartDetails.quantity + "'></div>"

            $("#paypal-address").val(localStorage.getItem("paypalAddress") || "");
            $("#cart-products").append(productInfo);
            $(".cart-list").append(productItem);
          }
        }
      });
      // End Filling cart details list
    }
    // End Cart details

    $("#subtotal").text(formatter.format(subtotal));
    $("#shipping").text(formatter.format(0));
    $("#total").text(formatter.format(subtotal + 0));
    // $("#shipping").text(formatter.format(subtotal * 0.01));
    // $("#total").text(formatter.format(subtotal * 1.01));
  }
  // End Update cart page information

  // Fuction on the "Add to Cart" button
  $(".addToCart").click(function(){
    var form = $(this).parents("form:first");
    var quantity = form.find("#quantity");
    var productId = form.find("#productId");

    var jsonData = JSON.parse(localStorage.getItem("banpCart")) || {};
    jsonData.cart = jsonData.cart || [];

    var flag = true;
    var userID = parseInt(atob($("#currentCustomer").val().trim()));

    if(userID == 0){
      $(location).attr("href", "/sign-in?notification=sign-in-required&redirect=" + window.location.pathname);
      return;
    }

    if(parseInt(quantity.val()) <= 0){
      amountGreater = i18nLocale == "es" ? "Ingrese una cantidad mayor que cero" : "Enter an amount greater than zero";
      amountNotValid = i18nLocale == "es" ? "Cantidad no valida" : "Amount not valid";

      toastr.error(amountGreater, amountNotValid);
      return;
    }

    // If product exists on the cart
    $.each(jsonData.cart, function(index, value){
      if(value !=  null){
        if (value.cartDetails.id == parseInt(productId.val()) ){
          flag = false;

          jsonData.cart[index] =
          {
            cartDetails:
            {
              id: parseInt(productId.val()),
              quantity: value.cartDetails.quantity + parseInt(quantity.val()),
              userId: userID
            },
          };
        }
      }
    });
    // End If product exists on the cart

    // If product does not exist on the cart
    if (flag){
      jsonData.cart.push(
        {
          cartDetails:
          {
            id: parseInt(productId.val()),
            quantity: parseInt(quantity.val()),
            userId: userID
          },
        }
      );
    }
    // End If product does not exist on the cart

    productCart = products.find(item => item.id === parseInt(productId.val()));

    productAdded = i18nLocale == "es" ? "Producto a√±adido al carrito" : "Product added to the cart";
    productName = i18nLocale == "es" ? productCart.name_spanish : productCart.name;

    toastr.success(productName + " (" + parseInt(quantity.val()) + ")", productAdded);

    localStorage.setItem("banpCart", JSON.stringify(jsonData));
    readCartInfo();
  });
  // End Fuction on the "Add to Cart" button

  // Fuction on the "Clear Cart" button
  $(".clearCart").click(function(){
    var jsonData = JSON.parse(localStorage.getItem("banpCart")) || {};
    jsonData.cart = jsonData.cart || [];
    var userID = parseInt(atob($("#currentCustomer").val().trim()));

    if(userID == 0){
      return;
    }

    // If product exists on the cart
    $.each(jsonData.cart, function(index, value){
      if(value !=  null){
        if(userID == value.cartDetails.userId){
          delete jsonData.cart[index];
        }
      }
    });
    // End If product exists on the cart

    localStorage.setItem("banpCart", JSON.stringify(jsonData));
    readCartInfo();
  });
  // End Fuction on the "Clear Cart" button

  // Validate if is a number
  function isNumber(n) {
    return !isNaN(parseInt(n)) && isFinite(n);
  }
  // End Validate if is a number

  // Add Mask and Event to Input
  function addEventMaskInput(){
    // Fuction on the "Remove from cart" button
    $(".removeFromCart").click(function(){
      var form = $(this).parents(".table-row:first");
      var productId = form.find("#productId");

      var jsonData = JSON.parse(localStorage.getItem("banpCart")) || {};
      jsonData.cart = jsonData.cart || [];

      var userID = parseInt(atob($("#currentCustomer").val().trim()));

      if(userID == 0){
        $(location).attr("href", "/sign-in?notification=sign-in-required&redirect=" + window.location.pathname);
        return;
      }

      // If product exists on the cart
      $.each(jsonData.cart, function(index, value){
        if(value !=  null){
          if(userID == value.cartDetails.userId){
            if (value.cartDetails.id == parseInt(productId.val()) ){
              delete jsonData.cart[index];
            }
          }
        }
      });

      localStorage.setItem("banpCart", JSON.stringify(jsonData));
      readCartInfo();
    });
    // End Fuction on the "Remove from cart" button

    // Prevent submit on cart details
    $("form.cart-form").submit(function(e){
      e.preventDefault();
    });
    // End Prevent submit on cart details

    // Validate numbers on quantity input
    $(".q-input").on("keyup change", function(){
      var form = $(this).parents("form:first");
      var quantity = form.find("#quantity");

      if (!isNumber(quantity.val())) {
        // readCartInfo();
        return;
      }
    });
    // End Validate numbers on quantity input

    // Avoid enter letters and symbols
    $(".q-input").keypress(function(e) {
      if(e.charCode < 48 || e.charCode > 57) return false;
    });
    // End Avoid enter letters and symbols

    // Focus out in quantity field on cart list
    $(".q-input.q-cart").focusout(function(){
      var form = $(this).parents("form:first");
      var quantity = form.find("#quantity");
      var productId = form.find("#productId");

      if (!isNumber(quantity.val())) {
        readCartInfo();
        return;
      }

      var jsonData = JSON.parse(localStorage.getItem("banpCart")) || {};
      jsonData.cart = jsonData.cart || [];

      var userID = parseInt(atob($("#currentCustomer").val().trim()));

      if(userID == 0){
        $(location).attr("href", "/sign-in?notification=sign-in-required");
        return;
      }

      if(parseInt(quantity.val()) <= 0){
        amountGreater = i18nLocale == "es" ? "Ingrese una cantidad mayor que cero" : "Enter an amount greater than zero";
        amountNotValid = i18nLocale == "es" ? "Cantidad no valida" : "Amount not valid";

        toastr.error(amountGreater, amountNotValid);
        return;
      }

      // If product exists on the cart
      $.each(jsonData.cart, function(index, value){
        if(value !=  null){
          if (value.cartDetails.id == parseInt(productId.val()) ){
            jsonData.cart[index] =
            {
              cartDetails:
              {
                id: parseInt(productId.val()),
                quantity: parseInt(quantity.val()),
                userId: userID
              },
            };
          }
        }
      });
      // End If product exists on the cart

      // productCart = products.find(item => item.id === parseInt(productId.val()));
      //
      // productAdded = i18nLocale == "es" ? "Producto a√±adido al carrito" : "Product added to the cart";
      // productName = i18nLocale == "es" ? productCart.name_spanish : productCart.name;
      //
      // toastr.success(productName + " (" + parseInt(quantity.val()) + ")", productAdded);

      localStorage.setItem("banpCart", JSON.stringify(jsonData));
      readCartInfo();
    });
    // End Focus out in quantity field on cart list

    // Mask only numbers
    $(".q-input").mask("0#");
    // End Mask only numbers

    // Substract button on cart details
    $(".subtract-cart").click(function(){
      var $input = $(this).next();
      var currentValue = parseInt($input.val());

      if(currentValue > 1){
        $input.val(currentValue - 1);
      }

      if ($input.val().length <= 0){
        $input.val(1);
      }

      $input.trigger("focusout");
    });
    // End Substract button on cart details

    // Add button on cart details
    $(".add-cart").click(function(){
      var $input = $(this).prev();
      var currentValue = parseInt($input.val());

      $input.val(currentValue + 1);

      if ($input.val().length <= 0){
        $input.val(1);
      }

      $input.trigger("focusout");
    });
    // End Add button on cart details
  }
  // End Add Mask and Event to Input

  // Update address localStorage
  function updateAddress(){
    // If checkbox exists
    if($("#different-address").length){
      // If checkbox is selected
      if($("#different-address").prop("checked")){

        if($("#address-field").val().trim() == ""){
          localStorage.setItem("paypalAddress", $("#default-address").text() || "");
        }
        else{
          localStorage.setItem("paypalAddress", $("#address-field").val() || "");
        }
      }
      // If checkbox is not selected
      else{
        localStorage.setItem("paypalAddress", $("#default-address").text() || "");
      }

      $("#paypal-address").val(localStorage.getItem("paypalAddress") || "");
    }
  }
  // Update address localStorage

  // Update address on checkbox change
  $("#different-address").on("change", function(){
    updateAddress();
  });
  // End Update address on checkbox change

  // Update address on address field change
  $("#address-field").on("keyup change", function(){
    updateAddress();
  });
  // End Update address on address field change

  // Set products Json
  setProductsJson();
  // End Set products Json

  // Update cart and cart details
  readCartInfo();
  // End Update cart and cart details

  // Update address
  updateAddress();
  // End Update address

});
